/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication61;

import java.util.ArrayList;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import org.omg.SendingContext.RunTime;

/**
 *
 * @author Hp
 */

public class NewJFrame extends javax.swing.JFrame {
    public ArrayList<Process> processes= new ArrayList();
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        burstTimeTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        run = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        InputTable = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        avgWaitLabel = new javax.swing.JTextField();
        avgTurnAroundLabel = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        burstTimeTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                burstTimeTxtActionPerformed(evt);
            }
        });

        jLabel2.setText("Burst Time :");

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        run.setText("Run");
        run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runActionPerformed(evt);
            }
        });

        jLabel4.setText("Create a new process");

        InputTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Process ID", "Burst Time"
            }
        ));
        jScrollPane2.setViewportView(InputTable);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Process ID", "Burst Time"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Input Processes");

        jLabel3.setText("Ready Processes");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTable2);

        jLabel5.setText("Average waiting time:");

        jLabel6.setText("Average turn around time:");

        avgWaitLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                avgWaitLabelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(38, 38, 38)
                        .addComponent(burstTimeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addButton)
                        .addGap(27, 27, 27)
                        .addComponent(run))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel5)))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(avgWaitLabel)
                                    .addComponent(avgTurnAroundLabel)))))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(avgWaitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(burstTimeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(avgTurnAroundLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addButton)
                            .addComponent(run))
                        .addGap(31, 31, 31)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(41, 41, 41)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void burstTimeTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_burstTimeTxtActionPerformed
        
    }//GEN-LAST:event_burstTimeTxtActionPerformed

    private void runActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runActionPerformed
           int n=processes.size();
           int totalWait=0;
           int totalTurn=0;
           int[] waitTime=new int[n];
           int[] turn=new int[n];
           waitTime[0]=0;
           
           DefaultTableModel mode = (DefaultTableModel)jTable1.getModel();
           DefaultTableModel gChart = (DefaultTableModel)jTable2.getModel();

        for(int i=0;i<processes.size();i++){    //sort proceses using bubble sort
            for(int j=0;j<processes.size()-i-1;j++){
                if(processes.get(j).getBurstTime()>processes.get(j+1).getBurstTime()){
                    Process temp_pr=processes.get(j);
                    processes.set(j, processes.get(j+1));
                    processes.set(j+1, temp_pr);
                }
            }

           }
   
           if(mode.getRowCount()>0 ){   //clear the table
            mode.getDataVector().removeAllElements();           
        }
           if(gChart.getColumnCount()>0){
            System.out.println(gChart.getColumnCount());
            gChart.setColumnCount(0);
        }
            for(Process process:processes){
            mode.addRow(new Object[] { process.getProcessId(),process.getBurstTime() });
            for(int i=1;i<=process.getBurstTime();i++){
                gChart.addColumn(process.getProcessId());
            }                   
        }
                    
        for(int i=1;i<n;i++){
            waitTime[i]=processes.get(i-1).getBurstTime()+waitTime[i-1];
        }
        for(int i=0;i<n;i++){
            turn[i]=processes.get(i).getBurstTime()+waitTime[i];
        }
        for(int i=0;i<n;i++){
            totalWait+=waitTime[i];
            totalTurn+=turn[i];
        }
        float averageWait=Math.round((float)totalWait/n);
        float averageTurn=Math.round((float)totalTurn/n);
        
        avgWaitLabel.setText(new Float(averageWait).toString());
        avgTurnAroundLabel.setText(new Float(averageTurn).toString());
        
    }//GEN-LAST:event_runActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        if(burstTimeTxt.getText().length()>0){
            int burstTime=Integer.valueOf(burstTimeTxt.getText()).intValue();
            Process p = new Process(burstTime);
            
            burstTimeTxt.setText("");
            if (processes.size() < 10) {
            String pid=p.getProcessId();
            processes.add(p);
            DefaultTableModel model = (DefaultTableModel)InputTable.getModel();
            model.addRow(new Object[] { pid,Integer.valueOf(burstTime) });
            
        }
            else {
        javax.swing.JOptionPane.showMessageDialog(null, "This sheduler can handle only 10 processes");
      }
      }
        else {
      javax.swing.JOptionPane.showMessageDialog(null, "There is not arrival time and run time given");
    }       
        

        
    }//GEN-LAST:event_addButtonActionPerformed

    private void avgWaitLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_avgWaitLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_avgWaitLabelActionPerformed
    public void sortProcesses(){
          int n = processes.size();
          int totWait=0;
          int totTurn=0;
          int[] waiting=new int[n];
          int[] turnaround=new int[n];
          
          
    }

    public static void main(String args[]) {
        
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable InputTable;
    private javax.swing.JButton addButton;
    private javax.swing.JTextField avgTurnAroundLabel;
    private javax.swing.JTextField avgWaitLabel;
    private javax.swing.JTextField burstTimeTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton run;
    // End of variables declaration//GEN-END:variables
}

class Process{
    private static int processCount;
    private String processId;
    private int burstTime;

    public static int getProcessCount() {
        return processCount;
    }

    public String getProcessId() {
        return processId;
    }
    

    public Process(int burstTime) {
        processId="P"+ ++processCount;
        this.burstTime=burstTime;
    }

    public int getBurstTime() {
        return burstTime;
    }
    
    
}